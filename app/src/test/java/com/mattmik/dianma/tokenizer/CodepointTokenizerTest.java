/*
 * Copyright (c) 2016-2017 Matthew Mikolay
 *
 * This file is part of Pocket CTC.
 *
 * Pocket CTC is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Pocket CTC is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Pocket CTC.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.mattmik.dianma.tokenizer;

import org.junit.Test;

import java.util.NoSuchElementException;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class CodepointTokenizerTest {

    @Test
    public void getInputTest() {

        Tokenizer tokenizer = new CodepointTokenizer("大家好！");
        assertEquals("大家好！", tokenizer.getInput());

    }

    @Test
    public void emptyStringHasMoreTokensTest() {

        Tokenizer tokenizer = new CodepointTokenizer("");
        assertFalse(tokenizer.hasMoreTokens());

    }

    @Test(expected = NoSuchElementException.class)
    public void emptyStringNextTokenTest() {

        new CodepointTokenizer("").nextToken();

    }

    @Test
    public void englishTokenizationTest() {

        Tokenizer tokenizer = new CodepointTokenizer("Lorem ipsum dolor sit amet, consectetur " +
                "adipiscing elit. Pellentesque ornare auctor bibendum. Phasellus pellentesque " +
                "nisl ut lectus porttitor, vitae euismod ex interdum. Donec mattis ornare " +
                "pulvinar. Sed mauris lacus, egestas eget porttitor ac, congue sed nulla. Proin " +
                "eget enim ut metus congue consectetur id sit amet elit. Cras consequat nibh et " +
                "hendrerit ornare. In sed ullamcorper orci, et cursus justo. Vestibulum arcu " +
                "nulla, porttitor id est vel, efficitur varius nulla. Nunc sed dolor " +
                "condimentum, consequat nisl a, tempor massa. In varius erat quis bibendum " +
                "pellentesque. Aenean sit amet malesuada odio.");

        assertTrue(tokenizer.hasMoreTokens());

        assertEquals(76, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(112, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(44, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(112, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(103, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(46, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(80, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(113, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(98, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(98, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(46, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(80, (int) tokenizer.nextToken());
        assertEquals(104, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(112, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(113, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(112, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(44, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(118, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(120, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(46, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(68, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(112, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(118, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(46, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(83, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(44, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(103, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(103, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(112, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(44, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(103, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(46, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(80, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(103, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(103, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(46, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(67, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(113, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(98, (int) tokenizer.nextToken());
        assertEquals(104, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(104, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(46, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(73, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(112, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(44, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(106, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(46, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(86, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(98, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(44, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(112, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(118, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(44, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(102, (int) tokenizer.nextToken());
        assertEquals(102, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(118, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(46, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(78, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(44, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(113, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(44, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(112, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(46, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(73, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(118, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(113, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(98, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(98, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(112, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(113, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(46, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(65, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(46, (int) tokenizer.nextToken());

        assertFalse(tokenizer.hasMoreTokens());

    }

    @Test
    public void chineseTokenizationTest() {

        Tokenizer tokenizer = new CodepointTokenizer("道者，令民與上同意也，可與之死，可與之生，" +
                "而不畏危。天者，陰陽，寒暑，時制也。地者，遠近，險易，廣狹，死生也。將者，智，信，仁，勇，" +
                "嚴也。法者，曲制，官道，主用也。凡此五者，將莫不聞，知之者勝，不知者不勝。");

        assertTrue(tokenizer.hasMoreTokens());

        assertEquals(36947, (int) tokenizer.nextToken());
        assertEquals(32773, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(20196, (int) tokenizer.nextToken());
        assertEquals(27665, (int) tokenizer.nextToken());
        assertEquals(33287, (int) tokenizer.nextToken());
        assertEquals(19978, (int) tokenizer.nextToken());
        assertEquals(21516, (int) tokenizer.nextToken());
        assertEquals(24847, (int) tokenizer.nextToken());
        assertEquals(20063, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(21487, (int) tokenizer.nextToken());
        assertEquals(33287, (int) tokenizer.nextToken());
        assertEquals(20043, (int) tokenizer.nextToken());
        assertEquals(27515, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(21487, (int) tokenizer.nextToken());
        assertEquals(33287, (int) tokenizer.nextToken());
        assertEquals(20043, (int) tokenizer.nextToken());
        assertEquals(29983, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(32780, (int) tokenizer.nextToken());
        assertEquals(19981, (int) tokenizer.nextToken());
        assertEquals(30031, (int) tokenizer.nextToken());
        assertEquals(21361, (int) tokenizer.nextToken());
        assertEquals(12290, (int) tokenizer.nextToken());
        assertEquals(22825, (int) tokenizer.nextToken());
        assertEquals(32773, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(38512, (int) tokenizer.nextToken());
        assertEquals(38525, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(23506, (int) tokenizer.nextToken());
        assertEquals(26257, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(26178, (int) tokenizer.nextToken());
        assertEquals(21046, (int) tokenizer.nextToken());
        assertEquals(20063, (int) tokenizer.nextToken());
        assertEquals(12290, (int) tokenizer.nextToken());
        assertEquals(22320, (int) tokenizer.nextToken());
        assertEquals(32773, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(36960, (int) tokenizer.nextToken());
        assertEquals(36817, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(38570, (int) tokenizer.nextToken());
        assertEquals(26131, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(24291, (int) tokenizer.nextToken());
        assertEquals(29433, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(27515, (int) tokenizer.nextToken());
        assertEquals(29983, (int) tokenizer.nextToken());
        assertEquals(20063, (int) tokenizer.nextToken());
        assertEquals(12290, (int) tokenizer.nextToken());
        assertEquals(23559, (int) tokenizer.nextToken());
        assertEquals(32773, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(26234, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(20449, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(20161, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(21191, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(22196, (int) tokenizer.nextToken());
        assertEquals(20063, (int) tokenizer.nextToken());
        assertEquals(12290, (int) tokenizer.nextToken());
        assertEquals(27861, (int) tokenizer.nextToken());
        assertEquals(32773, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(26354, (int) tokenizer.nextToken());
        assertEquals(21046, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(23448, (int) tokenizer.nextToken());
        assertEquals(36947, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(20027, (int) tokenizer.nextToken());
        assertEquals(29992, (int) tokenizer.nextToken());
        assertEquals(20063, (int) tokenizer.nextToken());
        assertEquals(12290, (int) tokenizer.nextToken());
        assertEquals(20961, (int) tokenizer.nextToken());
        assertEquals(27492, (int) tokenizer.nextToken());
        assertEquals(20116, (int) tokenizer.nextToken());
        assertEquals(32773, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(23559, (int) tokenizer.nextToken());
        assertEquals(33707, (int) tokenizer.nextToken());
        assertEquals(19981, (int) tokenizer.nextToken());
        assertEquals(32862, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(30693, (int) tokenizer.nextToken());
        assertEquals(20043, (int) tokenizer.nextToken());
        assertEquals(32773, (int) tokenizer.nextToken());
        assertEquals(21213, (int) tokenizer.nextToken());
        assertEquals(65292, (int) tokenizer.nextToken());
        assertEquals(19981, (int) tokenizer.nextToken());
        assertEquals(30693, (int) tokenizer.nextToken());
        assertEquals(32773, (int) tokenizer.nextToken());
        assertEquals(19981, (int) tokenizer.nextToken());
        assertEquals(21213, (int) tokenizer.nextToken());
        assertEquals(12290, (int) tokenizer.nextToken());

        assertFalse(tokenizer.hasMoreTokens());

    }

    @Test
    public void whitespaceTokenizationTest() {

        Tokenizer tokenizer = new CodepointTokenizer(" \t \t\t   \n \n\n   \t       \t\n");

        assertTrue(tokenizer.hasMoreTokens());

        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(9, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(9, (int) tokenizer.nextToken());
        assertEquals(9, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(10, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(10, (int) tokenizer.nextToken());
        assertEquals(10, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(9, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(9, (int) tokenizer.nextToken());
        assertEquals(10, (int) tokenizer.nextToken());

        assertFalse(tokenizer.hasMoreTokens());

    }

    @Test
    public void numberTokenizationTest() {

        Tokenizer tokenizer = new CodepointTokenizer("48367493264095895467254312390485094329089");

        assertTrue(tokenizer.hasMoreTokens());

        assertEquals(52, (int) tokenizer.nextToken());
        assertEquals(56, (int) tokenizer.nextToken());
        assertEquals(51, (int) tokenizer.nextToken());
        assertEquals(54, (int) tokenizer.nextToken());
        assertEquals(55, (int) tokenizer.nextToken());
        assertEquals(52, (int) tokenizer.nextToken());
        assertEquals(57, (int) tokenizer.nextToken());
        assertEquals(51, (int) tokenizer.nextToken());
        assertEquals(50, (int) tokenizer.nextToken());
        assertEquals(54, (int) tokenizer.nextToken());
        assertEquals(52, (int) tokenizer.nextToken());
        assertEquals(48, (int) tokenizer.nextToken());
        assertEquals(57, (int) tokenizer.nextToken());
        assertEquals(53, (int) tokenizer.nextToken());
        assertEquals(56, (int) tokenizer.nextToken());
        assertEquals(57, (int) tokenizer.nextToken());
        assertEquals(53, (int) tokenizer.nextToken());
        assertEquals(52, (int) tokenizer.nextToken());
        assertEquals(54, (int) tokenizer.nextToken());
        assertEquals(55, (int) tokenizer.nextToken());
        assertEquals(50, (int) tokenizer.nextToken());
        assertEquals(53, (int) tokenizer.nextToken());
        assertEquals(52, (int) tokenizer.nextToken());
        assertEquals(51, (int) tokenizer.nextToken());
        assertEquals(49, (int) tokenizer.nextToken());
        assertEquals(50, (int) tokenizer.nextToken());
        assertEquals(51, (int) tokenizer.nextToken());
        assertEquals(57, (int) tokenizer.nextToken());
        assertEquals(48, (int) tokenizer.nextToken());
        assertEquals(52, (int) tokenizer.nextToken());
        assertEquals(56, (int) tokenizer.nextToken());
        assertEquals(53, (int) tokenizer.nextToken());
        assertEquals(48, (int) tokenizer.nextToken());
        assertEquals(57, (int) tokenizer.nextToken());
        assertEquals(52, (int) tokenizer.nextToken());
        assertEquals(51, (int) tokenizer.nextToken());
        assertEquals(50, (int) tokenizer.nextToken());
        assertEquals(57, (int) tokenizer.nextToken());
        assertEquals(48, (int) tokenizer.nextToken());
        assertEquals(56, (int) tokenizer.nextToken());
        assertEquals(57, (int) tokenizer.nextToken());

        assertFalse(tokenizer.hasMoreTokens());

    }

    @Test
    public void mixedTokenizationTest() {

        Tokenizer tokenizer = new CodepointTokenizer("   To say \"hello\" in Chinese, you can " +
                "say 你好。 你会说英文吗？  今天是星期三。It is November 2, and there are 30 days in " +
                "this month. 42 is the meaning of life. 生活的意思是42。\t");

        assertTrue(tokenizer.hasMoreTokens());

        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(84, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(121, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(34, (int) tokenizer.nextToken());
        assertEquals(104, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(34, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(67, (int) tokenizer.nextToken());
        assertEquals(104, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(44, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(121, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(117, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(99, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(121, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(20320, (int) tokenizer.nextToken());
        assertEquals(22909, (int) tokenizer.nextToken());
        assertEquals(12290, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(20320, (int) tokenizer.nextToken());
        assertEquals(20250, (int) tokenizer.nextToken());
        assertEquals(35828, (int) tokenizer.nextToken());
        assertEquals(33521, (int) tokenizer.nextToken());
        assertEquals(25991, (int) tokenizer.nextToken());
        assertEquals(21527, (int) tokenizer.nextToken());
        assertEquals(65311, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(20170, (int) tokenizer.nextToken());
        assertEquals(22825, (int) tokenizer.nextToken());
        assertEquals(26159, (int) tokenizer.nextToken());
        assertEquals(26143, (int) tokenizer.nextToken());
        assertEquals(26399, (int) tokenizer.nextToken());
        assertEquals(19977, (int) tokenizer.nextToken());
        assertEquals(12290, (int) tokenizer.nextToken());
        assertEquals(73, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(78, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(118, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(98, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(50, (int) tokenizer.nextToken());
        assertEquals(44, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(104, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(114, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(51, (int) tokenizer.nextToken());
        assertEquals(48, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(100, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(121, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(104, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(104, (int) tokenizer.nextToken());
        assertEquals(46, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(52, (int) tokenizer.nextToken());
        assertEquals(50, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(115, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(116, (int) tokenizer.nextToken());
        assertEquals(104, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(109, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(97, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(110, (int) tokenizer.nextToken());
        assertEquals(103, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(111, (int) tokenizer.nextToken());
        assertEquals(102, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(108, (int) tokenizer.nextToken());
        assertEquals(105, (int) tokenizer.nextToken());
        assertEquals(102, (int) tokenizer.nextToken());
        assertEquals(101, (int) tokenizer.nextToken());
        assertEquals(46, (int) tokenizer.nextToken());
        assertEquals(32, (int) tokenizer.nextToken());
        assertEquals(29983, (int) tokenizer.nextToken());
        assertEquals(27963, (int) tokenizer.nextToken());
        assertEquals(30340, (int) tokenizer.nextToken());
        assertEquals(24847, (int) tokenizer.nextToken());
        assertEquals(24605, (int) tokenizer.nextToken());
        assertEquals(26159, (int) tokenizer.nextToken());
        assertEquals(52, (int) tokenizer.nextToken());
        assertEquals(50, (int) tokenizer.nextToken());
        assertEquals(12290, (int) tokenizer.nextToken());
        assertEquals(9, (int) tokenizer.nextToken());

        assertFalse(tokenizer.hasMoreTokens());

    }

}
